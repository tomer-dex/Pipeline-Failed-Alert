name: Trigger Terraform Deploy and Show Diff

on:
  workflow_dispatch:

permissions:
  actions: write
  contents: read

jobs:
  trigger-and-read-plan:
    runs-on: ubuntu-latest

    steps:
      - name: Get start time
        id: time
        run: echo "start_time=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Trigger deploy.yml
        run: |
          echo "🚀 מפעיל את deploy.yml"
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy.yml/dispatches \
            -d '{"ref":"main"}'

      - name: Wait a bit...
        run: sleep 10

      - name: Find the new workflow run
        id: find
        run: |
          echo "🔍 מחפש run חדש..."
          run_id=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy.yml/runs?branch=main \
            | jq -r --arg start "${{ steps.time.outputs.start_time }}" '
              .workflow_runs[] | select(.created_at > $start) | .id' | head -n 1)
          echo "run_id=$run_id" >> $GITHUB_OUTPUT

      - name: Poll for completion
        id: poll
        run: |
          run_id=${{ steps.find.outputs.run_id }}
          echo "🔁 ממתין לסיום של run_id=$run_id"
          for i in {1..15}; do
            result=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id)
            status=$(echo "$result" | jq -r '.status')
            conclusion=$(echo "$result" | jq -r '.conclusion')
            echo "🔎 Status: $status | Conclusion: $conclusion"
            if [ "$status" == "completed" ]; then
              echo "conclusion=$conclusion" >> $GITHUB_OUTPUT
              break
            fi
            sleep 10
          done

      - name: Download logs
        if: ${{ steps.poll.outputs.conclusion != '' }}
        run: |
          run_id=${{ steps.find.outputs.run_id }}
          echo "📥 מוריד לוגים עבור run_id=$run_id"
          curl -s -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -o logs.zip \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/logs
          unzip -o logs.zip -d logs
          find logs

      - name: Show Terraform Plan Diff
        id: diff
        run: |
          echo "📄 בודק את הפלט של terraform plan"
          PLAN_FILE=$(find logs -type f -iname "*Terraform Plan.txt" | head -n 1)

          if [ -z "$PLAN_FILE" ]; then
            echo "✅ לא נמצא קובץ plan – כנראה שהכל תקין או שה-child לא הנפיק תוכן"
            echo "drift_detected=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "📄 הקובץ שנמצא: $PLAN_FILE"
          echo "----- Terraform Plan Output Start -----"
          cat "$PLAN_FILE"
          echo "----- Terraform Plan Output End -----"

          if grep -qE '(\+ create|\~ update|\- destroy)' "$PLAN_FILE"; then
            echo "⚠️ נמצאו שינויים – ייתכן DRIFT"
            echo "drift_detected=true" >> $GITHUB_OUTPUT
          else
            echo "✅ אין שינויים – הכל מיושר!"
            echo "drift_detected=false" >> $GITHUB_OUTPUT
          fi

      - name: Open ticket (simulated)
        if: ${{ steps.diff.outputs.drift_detected == 'true' }}
        run: |
          echo "🚨 DRIFT זוהה – פותח קריאה (סימולציה)"
          # ניתן להוסיף כאן קריאה ל-Freshdesk או כל מערכת תמיכה אחרת
